<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.3.3.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.syl.learn</groupId>
    <artifactId>sharding-sphere</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>sharding-demo</name>
    <description>Demo project for Spring Boot</description>

    <properties>
        <java.version>1.8</java.version>
        <nacos-version>1.4.1</nacos-version>
        <sharding-version>4.1.1</sharding-version>
    </properties>

    <dependencies>
        <!-- https://mvnrepository.com/artifact/org.apache.shardingsphere/sharding-jdbc -->
        <dependency>
            <groupId>org.apache.shardingsphere</groupId>
            <artifactId>sharding-jdbc-spring-boot-starter</artifactId>
            <version>${sharding-version}</version>
        </dependency>
        <!-- 如果使用sp-distributed 服务治理环境，需引入该依赖，并关闭上面sharding-jdbc-spring-boot-starter的依赖-->
        <!--        <dependency>-->
        <!--            <groupId>org.apache.shardingsphere</groupId>-->
        <!--            <artifactId>sharding-jdbc-orchestration-spring-boot-starter</artifactId>-->
        <!--            <version>${sharding-version}</version>-->
        <!--        </dependency>-->

        <!-- 如果使用sp-distributed 服务治理环境，且使用zookeeper作为配置或注册中心，需引入该依赖，并关闭上面sharding-jdbc-spring-boot-starter的依赖-->
        <!--        <dependency>-->
        <!--            <groupId>org.apache.shardingsphere</groupId>-->
        <!--            <artifactId>sharding-orchestration-center-zookeeper-curator</artifactId>-->
        <!--            <version>${sharding-version}</version>-->
        <!--        </dependency>-->

        <!-- 如果使用nacos作为配置中心，打开该依赖 注意，nacos官方仅支持配置中心，不支持注册中心-->
        <!--        <dependency>-->
        <!--            <groupId>org.apache.shardingsphere</groupId>-->
        <!--            <artifactId>sharding-orchestration-center-nacos</artifactId>-->
        <!--            <version>${sharding-version}</version>
                </dependency>-->


        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>2.1.3</version>
        </dependency>

        <!--mysql驱动包-->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>8.0.16</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.projectlombok/lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.8</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.googlecode.aviator</groupId>
            <artifactId>aviator</artifactId>
            <version>5.1.4</version>
        </dependency>
        <dependency>
            <groupId>com.alibaba.nacos</groupId>
            <artifactId>nacos-client</artifactId>
            <version>${nacos-version}</version>
        </dependency>
        <dependency>
            <groupId>com.github.pagehelper</groupId>
            <artifactId>pagehelper-spring-boot-starter</artifactId>
            <version>1.2.10</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <!-- 原生ORM环境 -->
            <id>原生ORM环境</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <profileActive>common</profileActive>
            </properties>
        </profile>
        <profile>
            <!-- sharding 读写分离环境 -->
            <id>读写分离</id>
            <properties>
                <profileActive>sharding-rw</profileActive>
            </properties>
        </profile>
        <profile>
            <!-- sharding 分表环境 -->
            <id>分表</id>
            <properties>
                <profileActive>sharding-sub-tb</profileActive>
            </properties>
        </profile>
        <profile>
            <!-- sharding 分表读写分离环境 -->
            <id>分表+读写分离</id>
            <properties>
                <profileActive>sharding-sub-tb-rw</profileActive>
            </properties>
        </profile>
        <profile>
            <!-- sharding 分库分表环境 -->
            <id>分库分表</id>
            <properties>
                <profileActive>sharding-sub-db-tb</profileActive>
            </properties>
        </profile>
        <profile>
            <!-- sharding 分库分表读写分离环境 -->
            <id>分库分表+读写分离</id>
            <properties>
                <profileActive>sharding-sub-db-tb-rw</profileActive>
            </properties>
        </profile>
        <!--########################专项配置##############################-->
        <profile>
            <!-- special 数据加密 -->
            <id>数据加密</id>
            <properties>
                <profileActive>sp-encrypt</profileActive>
            </properties>
        </profile>
        <profile>
            <!-- special 分布式主键 -->
            <id>分布式主键</id>
            <properties>
                <profileActive>sp-key-generator</profileActive>
            </properties>
        </profile>
        <profile>
            <!-- special 分布式治理 -->
            <id>分布式治理</id>
            <properties>
                <profileActive>sp-distributed</profileActive>
            </properties>
        </profile>
    </profiles>


    <build>
        <filters> <!-- 指定使用的filter文件，根据profile设置过滤文件 -->
            <filter>src/main/filters/${profileActive}.properties</filter>
        </filters>
        <!--开启资源过滤：将resources中配置文件的变量利用profile进行替换-->
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <!--允许进行资源过滤-->
            </resource>
            <resource>
                <directory>src/main/bin</directory>
                <!--允许进行资源过滤-->
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <encoding>utf-8</encoding>
                    <useDefaultDelimiters>true</useDefaultDelimiters>
                </configuration>
            </plugin>
        </plugins>
        <finalName>${project.artifactId}</finalName>
    </build>


</project>
